package com.sap.cds.feature.attachments.integrationtests.nondraftservice;

import static com.github.tomakehurst.wiremock.client.WireMock.*;

import org.junit.jupiter.api.BeforeEach;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.tomakehurst.wiremock.WireMockServer;
import com.maciejwalkowiak.wiremock.spring.ConfigureWireMock;
import com.maciejwalkowiak.wiremock.spring.EnableWireMock;
import com.maciejwalkowiak.wiremock.spring.InjectWireMock;
import com.sap.cds.feature.attachments.integrationtests.constants.Profiles;
import com.sap.cds.feature.attachments.service.malware.client.model.MalwareScanResult;

@ActiveProfiles(profiles = {Profiles.TEST_HANDLER_DISABLED, Profiles.MALWARE_SCAN_ENABLED})
@EnableWireMock({@ConfigureWireMock(port = 1111, name = "malware-scanner")})
public class OdataRequestValidationWithoutTestHandlerAndMalwareScannerTest extends OdataRequestValidationWithoutTestHandlerAndWithoutMalwareScannerTest {

	@InjectWireMock("malware-scanner")
	private WireMockServer wiremock;

	@Autowired
	private ObjectMapper objectMapper;

	@BeforeEach
	void setup() throws JsonProcessingException {
		var result = new MalwareScanResult(false, false, 1000, null);

		wiremock.stubFor(post(urlEqualTo("/")).withBasicAuth("test-user", "test-password")
																					.willReturn(aResponse().withBody(objectMapper.writeValueAsString(result)).withStatus(200)));
	}


}
